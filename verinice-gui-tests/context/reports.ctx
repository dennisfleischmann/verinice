--- RCPTT testcase ---
Format-Version: 1.0
Context-Type: org.eclipse.rcptt.ctx.ecl
Element-Name: reports
Element-Type: context
Element-Version: 2.0
Id: _tlZuIIx1Eei2UKUDmonytQ
Runtime-Version: 2.5.2.202109092356
Save-Time: 3/28/22, 10:13 AM

------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998
Content-Type: text/ecl
Entry-Name: .ecl.context

global [val reportdir [concat [get-java-property basepath] [get-java-property "file.separator"] "reports"]]


proc "to-report-file" [val report] [val qualifier ""] [val suffix ".pdf"]  {
    concat $reportdir [get-java-property "file.separator"] $qualifier $report $suffix| invoke replaceAll ":" "_" | invoke replaceAll " " "_" 
}

proc "report-result-file" [val testname]{
    echo [concat $reportdir [get-java-property "file.separator"] $testname ".txt"]
}

proc "test-for-report-file" [val testname] [val report] [val qualifier ""] [val suffix ".pdf"] {
    try{
        get-file [to-report-file $report $qualifier $suffix] | get exists | assert-true
    } -catch {
        echo  [concat $report $qualifier $suffix " get-file failed"]  | write-lines  [report-result-file $testname] -append true
    }
}

/*
* Test the report error file an fail if the file exist diplays the content of the file
* as reason of failure.
*/
proc "test-for-report-errors" [val testname] {
    get-file [report-result-file $testname]
    | get exists | not | assert-true 
        -message [return-report-error $testname]
}

/*
* Reads the error file as message.
*/
proc "return-report-error" [val testname] {
if [ get-file [report-result-file $testname] | get exists]
    -then {
        concat "Error while creating reports" [read-lines [report-result-file $testname] ] 
    } -else {
        echo "no error"
    }
}

proc "gen-rep-com" [val report] [val view] [val object] [val qualifier ""] [val suffix ".pdf"]{
	get-view $view | get-tree | select $object | get-menu -path "Erzeuge Report..." | click
	log [concat "create report: " $report " write to file: " [to-report-file $report $qualifier $suffix]]
	try {
		with [get-window Report] {
			get-group "" | get-combo -after [get-label "Report auswählen:"] | select $report
		    get-group "" | get-combo -after [get-label "Ausgabeformat"] | select [concat ".*" [ $suffix | invoke toUpperCase] "*."]
			set-dialog-result File [to-report-file $report $qualifier $suffix]
			get-button OK | click
		}
		get-window "Report erfolgreich erzeugt" | get-button OK | click
	} -catch {
		log [concat "ERROR configuring report creation dialog for " $report " on " $object]
		try {
			get-window Report | get-button Abbrechen | click
		} -catch {
		//there is not always such window
		}
	}
}

/* enable the logging for the reporting * */
proc "enable-reporting-log" {
	get-menu -path "Bearbeiten/Einstellungen..." | click
	with [get-window Benutzervorgaben] {
		get-tree | select Reports
		if [not[get-window Benutzervorgaben | get-button "Reportlogging benutzen" | get-property selected -raw ] ]{
		get-window Benutzervorgaben | get-button "Reportlogging benutzen" | check
		get-window Benutzervorgaben | get-combo -after [get-label "Log-Level"] | select Alles
		set-dialog-result Folder [concat $basedir [get-java-property "file.separator"] "log"]
		get-button "Durchsuchen..." | click
		}
		get-button "Anwenden und Schließen" | click
	}
}

/* set the report deposite for the reporting * */
proc "set-local-reporting-repository" [val path]{
    log [concat "setlocal report repository to " $path]
	get-menu -path "Bearbeiten/Einstellungen..." | click
	get-window Benutzervorgaben | get-tree | select Reports
	set-dialog-result Folder $path
	with [get-window Benutzervorgaben] {
		get-button "Durchsuchen..." -after [get-label "Report-Templates"] | click
		get-button "Anwenden und Schließen" | click
	}
}
------=_.ecl.context-718f04b4-ed39-33e3-af62-0995e4561998--
